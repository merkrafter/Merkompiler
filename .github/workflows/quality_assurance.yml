name: Quality Assurance

on:
  pull_request:
  push:
    paths:
      - 'src/**'
      - 'pom.xml'
    branches: 
      - master
      - development

jobs:
  style_check:
    # This job uses google-java-format to check whether the (main and test) source code is formatted properly
    runs-on: ubuntu-latest
    container: openjdk:11
    steps:
      - uses: actions/checkout@v3
      - name: Cache google-java-format jar
        id: cache-formatter
        uses: actions/cache@v2.1.6
        env:
          cache-name: formatter
        with:
          path: ./formatter
          # to keep things simple, no version information is used for the cache as it is unlikely that another version of the formatter will be used
          key: formatter-jar
      - name: Download google-java-format Release 1.8
        if: ${{ steps.cache-formatter.outputs.cache-hit == false }}
        run: wget https://github.com/google/google-java-format/releases/download/google-java-format-1.8/google-java-format-1.8-all-deps.jar -P ./formatter
      - name: Check style with google-java-format
        run: java -jar ./formatter/google-java-format-1.8-all-deps.jar --dry-run --set-exit-if-changed $(find src -path "*/java/**" -path "*.java")
        
  functional_tests:
    # this step runs the project's functional tests using mvn test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'zulu'
    - name: Cache mvn dependencies
      uses: actions/cache@v2.1.6
      env:
        cache-name: mvn-deps
      with:
        path: ~/.m2
        key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
        restore-keys: ${{ env.cache-name }}-
    - name: Test with Maven
      run: mvn -B kotlin:compile test --file pom.xml
    - name: Upload to Codecov
      uses: codecov/codecov-action@v2.0.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
  
  
